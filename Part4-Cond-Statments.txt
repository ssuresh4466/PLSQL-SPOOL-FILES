			CONTROL STRUCUTRES
			******************
CONDITIONAL STMTS
LOOPS
CASE

CONDITIONAL STMTS:
******************
Used to execute a set of stmts based on condition result.
The result of a condition is a BOOLEAN value that is either 
TRUE or  FALSE.
The conditional statements are used to compare values.


1) simple if:
*************
	It has only true part. 
	If the condition is true the it executes the stmts
        under IF block.

syn:	IF (condition) THEN
	stmt;
	stmt;
	:
	END IF;


2) if -- then-- else
********************
It is having both true and false parts. 
If the condition is true then it executes the true part and 
if the condition was failed then it executes the false part.

syn:	IF (condition) THEN
	stmt;
	stmt;
	:
      ELSE
	stmt;
	stmt;
	:
	END IF;

3) COMPUND IF / Nested IF:
**************************
writing if condition with in other if condition.

syn:	if (cond-1) then
	stmts;
	stmts;
		if (cond-2) then
		stmt;
		:
	       else
		stmt;
		:
		end if; --closing of cond-2
       else
	stmt;
	:
	end if; --closing of cond-1

4) ELSIF construct:
*******************
Writing if condition with in else part of other if condition.
If any condition is true, then it will execute set of stmts
from that if block.
IF all conditions are false , then it will execute set of stmts
from last ELSE part.

   if (cond-1) then
   --
   elsif(cond-2) then
   --
   elsif(cond-3) then
   --
   else
   --
   end if;




=========================================================================================

--Creating a procedure to display biggest of 2 integers with 
--simple if logic?


CREATE OR REPLACE PROCEDURE PROC_BIGINT_1( X INT, Y INT)
IS
BEGIN
DBMS_OUTPUT.PUT_LINE('X='||X||'  '||'Y='||Y);
IF (X>Y) THEN
  DBMS_OUTPUT.PUT_LINE('FIRST VALUE IS BIG');
  END IF;
     DBMS_OUTPUT.PUT_LINE('end of execution');
  END PROC_BIGINT_1;
  
  EXEC PROC_BIGINT_1(10,20);
  EXEC PROC_BIGINT_1(100,20);



--Creating a procedure to display biggest of 2 integers 
--with  if-then-else logic?


CREATE OR REPLACE PROCEDURE PROC_BIGINT_2( X INT, Y INT)
IS
BEGIN
DBMS_OUTPUT.PUT_LINE('X='||X||'  '||'Y='||Y);
IF (X>Y) THEN
    DBMS_OUTPUT.PUT_LINE('FIRST VALUE IS BIG');
  else
  DBMS_OUTPUT.PUT_LINE('Second VALUE IS BIG');
  END IF;
     DBMS_OUTPUT.PUT_LINE('end of execution');
  END PROC_BIGINT_2;  
  
  exec proc_bigint_2(20,10);
  exec proc_bigint_2(100,100);
  


--Creating a procedure to display biggest of 2 integers with  
Elsif logic?


CREATE OR REPLACE PROCEDURE PROC_BIGINT_3( X INT, Y INT)
IS
BEGIN
DBMS_OUTPUT.PUT_LINE('X='||X||'  '||'Y='||Y);
IF (X>Y) THEN
    DBMS_OUTPUT.PUT_LINE('FIRST VALUE IS BIG');
  elsif(x=y) then
    dbms_output.put_line(' x and y are equal');
     else
  DBMS_OUTPUT.PUT_LINE('Second VALUE IS BIG');
  END IF;
     DBMS_OUTPUT.PUT_LINE('end of execution');
  END PROC_BIGINT_3;  
  
  exec proc_bigint_3(4,5);
  exec proc_bigint_3(5,5);
  exec proc_bigint_3(14,5);



Ex:	 
Write a program to display biggest of integers if any 
one given value is  null?

CREATE OR REPLACE PROCEDURE PROC_BIGINT_4( X INT, Y INT)
IS
a int;
b int;
BEGIN
DBMS_OUTPUT.PUT_LINE('X='||X||'  '||'Y='||Y);
if x is null then
dbms_output.put_line(' Enter a valid value in the First position');
else
a:=x;
end if;
if y is null then
dbms_output.put_line(' Enter a valid value in the second position');
else
b:=y;
end if;

IF (a>b) THEN
    DBMS_OUTPUT.PUT_LINE('FIRST VALUE IS BIG');
  elsif(a=b) then
    dbms_output.put_line(' Values are equal');
     else
  DBMS_OUTPUT.PUT_LINE('Second VALUE IS BIG');
  END IF;
     DBMS_OUTPUT.PUT_LINE('end of execution');
  END PROC_BIGINT_4;  


 Ex: 
write a procedure to find which emp getting less salary from 
given 2 emp numbers?

create or replace procedure proc_cmp_sal
(
veno1  emp.empno%type,
veno2  emp.empno%type
)
IS
vsal1  number;
vsal2  number;
begin
select sal into vsal1 from emp
where empno=veno1;
select sal into vsal2 from emp
where empno=veno2;
--display emp id values and their salaries
dbms_output.put_line
(CHR(10)||
' EMPID-1:  '||veno1||'      Salary:  '||vsal1||chr(10)||
' EMPID-2:  '||veno2||'      Salary:  '||vsal2);
--compare salaries
if(vsal1 < vsal2) then
dbms_output.put_line
(veno1||' has less salary.');
elsif(vsal1=vsal2) then
dbms_output.put_line
('Both has equal salaries');
else
dbms_output.put_line
(veno2||' has less salary');
end if;
end proc_cmp_sal;


Ex:	
write a procedure to find which type of customers
( either male customers or female customers) less in count, 
from the given city?

	create or replace procedure proc_Gender_cnt
	(vcity cust_dtls.city%type)
	 is
	v_mcnt int;
	v_fcnt int;
	begin
	select count(*) into v_mcnt from cust_dtls 
	where city=vcity and gender='M';
	select count(*) into v_fcnt from cust_dtls 
	where city=vcity and gender='F';
--printing the counted values
	dbms_output.put_line
	(chr(10)||'Given city Name:- '||vcity||chr(10)||
	'Male count:- '||v_mcnt||chr(10)||
	'Female count:- '||v_fcnt);
--comparing the counts
	if(v_mcnt < v_fcnt) then
	dbms_output.put_line
	(chr(10)||'Males are less in count than females');
	elsif(v_mcnt=v_fcnt) then
	dbms_output.put_line
	(chr(10)||'Males and females are equal in count');
	else
	dbms_output.put_line
	(chr(10)||'females are less in count than males');
	end if;
	end proc_gender_cnt;


EX: 
write a procedure to find out which account type has
highest total funds from the given account types?



create or replace procedure proc_high_funds
(
vact1     cust_act_dtls.act_type%type,
vact2     cust_act_dtls.act_type%type
)
IS  
TOT1   NUMBER;
TOT2   NUMBER;
BEGIN
SELECT SUM(ACT_BAL) INTO TOT1 
FROM CUST_ACT_DTLS 
WHERE ACT_TYPE=VACT1;

SELECT SUM(ACT_BAL) INTO TOT2 
FROM CUST_ACT_DTLS 
WHERE ACT_TYPE=VACT2;
--display total values from each account type
DBMS_OUTPUT.PUT_LINE
(' FUNDS FROM  '||VACT1||' IS  '||TOT1);
DBMS_OUTPUT.PUT_LINE
(' FUNDS FROM  '||VACT2||' IS  '||TOT2);
--comparing totals
IF (TOT1 > TOT2) THEN
DBMS_OUTPUT.PUT_LINE
(chr(10)||
VACT1||'  HAS HIGHEST FUNDS');
ELSIF(TOT1 = TOT2) THEN
DBMS_OUTPUT.PUT_LINE(chr(10)||
' BOTH HAVE EQUAL FUNDS ');
ELSE
DBMS_OUTPUT.PUT_LINE(chr(10)||
VACT2||' HAS HIGHEST FUNDS');
END IF;
END PROC_high_FUNDS;


	
Ex:
Find which account has highest bal from given 2 account 
numbers?

create or replace procedure proc_high_bal
(
actno1  cust_act_dtls.actno%type,
actno2  cust_act_dtls.actno%type
)
is
bal1  cust_act_dtls.act_bal%type;
bal2  cust_act_dtls.act_bal%type;
begin
select act_bal into bal1 from cust_act_dtls where actno=actno1;
select act_bal into bal2 from cust_act_dtls where actno=actno2;
dbms_output.put_line('First Actno:  '||actno1||'     ActBal:   '||bal1);
dbms_output.put_line('Second Actno:  '||actno2||'     ActBal:   '||bal2);
if bal1>bal2 then
dbms_output.put_line('First account has highest balance');
elsif(bal1=bal2) then
dbms_output.put_line('Both accounts having equal balance');
else
dbms_output.put_line('Second account has highest balance');
end if;
end proc_high_bal;

Ex:

create or replace procedure proc_high_sal
(
eid1  emp.empno%type,
eid2  emp.empno%type
)
is
sal1 number;
sal2 number;
begin
select sal into sal1 from emp 
where empno=eid1;
select sal into sal2 from emp 
where empno=eid2;
dbms_output.put_line
(
'EID-1='||eid1 ||' sal= '||sal1||chr(10)||
'EID-2='||eid2 ||' sal= '||sal2
);
if (sal1 > sal2 )
then
dbms_output.put_line
(eid1 ||' getting highest salary');
elsif(sal1=sal2)
then
dbms_output.put_line
('both are getting equal salary');
else
dbms_output.put_line
(eid2||' getting highest salary');
end if;
end proc_high_sal;


Ex:
write a procedure to find out from which city we have more 
number of customers from given cities?

create or replace procedure proc_high_cust_cnt
(
vcity1 cust_dtls.city%type,
vcity2 cust_dtls.city%type	
)
is
cnt1  int;
cnt2  int;
begin
select count(*) into  cnt1 from cust_dtls
where city=vcity1;
select count(*) into  cnt2 from cust_dtls
where city=vcity2;
dbms_output.put_line
(
' city-1 :  '||vcity1||' cust count:  '||cnt1||chr(10)||
' city-2 :  '||vcity2||' cust count:  '||cnt2
);
if (cnt1>cnt2) then
dbms_output.put_line
(vcity1||'has higher number of customers');
elsif(cnt1=cnt2) then
dbms_output.put_line
('Equal  number of cusotmers from the cities');
else
dbms_output.put_line
(vcity2||' has higher number of customers');
end if;
end proc_high_cust_cnt; 



Ex:
write a procedure to find out from which city we have 
more number of customers with given gender, from given cities?

create or replace procedure proc_high_cust_cnt
(
vcity1 cust_dtls.city%type,
vcity2 cust_dtls.city%type,
vgen  char	
)
is
cnt1  int;
cnt2  int;
begin
select count(*) into  cnt1 
from cust_dtls
where city=vcity1 and gender=vgen;
select count(*) into  cnt2 
from cust_dtls
where city=vcity2 and gender=vgen;
dbms_output.put_line
(chr(10)||' Gender:  '||vgen||chr(10)||
' city-1 :  '||vcity1||' cust count:  '||cnt1||chr(10)||
' city-2 :  '||vcity2||' cust count:  '||cnt2
);
if (cnt1>cnt2) then
dbms_output.put_line
(vcity1||'  has higher number of Male customers');
elsif(cnt1=cnt2) then
dbms_output.put_line
(' Equal  number of cusotmers from the cities');
else
dbms_output.put_line
(vcity2||'  has higher number of customers');
end if;
end proc_high_cust_cnt; 



Ex:
	display a message based on balance like
	INSUFFICIENT FUNDS
		OR
	TAKE YOUR MONEY?

create or replace procedure proc_verify_withdrawl
(
vactno  cust_act_dtls.actno%type,
vamt   number
)
is
vbal  number;
begin
select act_bal into vbal 
from cust_act_dtls
where actno=vacctno;
if(vbal<=vamt) then
dbms_output.put_line
(' Insufficient balance');
else
update cust_act_dtls
set act_bal=act_bal-vamt
where actno=vactno;
dbms_output.put_line
(' take your money');
end if;
commit;
end proc_verify_withdrawl;

------------------------------------------------------------------------------------------
Ex: finding less investment for a dept from given 2 deptnos?

create or replace procedure proc_less_fund_dept
(
vdno1  emp.deptno%type,
vdno2  emp.deptno%type
)
as
tot1    number;
tot2    number;
begin
select sum(sal) into tot1 from emp
where deptno=vdno1;
select sum(sal) into tot2 from emp
where deptno=vdno2;
dbms_output.put_line
('deptno:  '||vdno1||'  Investment:  '|| tot1||chr(10)||
' Deptno:  '||vdno2||'  Investment:  '||tot2);
if (tot1 < tot2) then
dbms_output.put_line
(' less investment for deptno: '||vdno1);
elsif(tot1=tot2) then
dbms_output.put_line
(' Investment for depts is equal: '||tot1);
else
dbms_output.put_line
(' less investment for deptno: '||vdno2);
end if;
end;
------------------------------------------------------------------------------------------
--write a procedure to calculate bill amount, based on given product id?
--Bill amount is calculated by deducting discount from original cost?
--Discount is calculated as follows?

<1000		No discount
>=1000 & <10000    10%
>=10000 & <20000   25%
>=20000 & <50000   40%
>=50000            50%

create or replace procedure proc_Billamount
(vpid  prod_dtls.prod_code%type)
is
vpname  varchar2(20);
vcost   number;
discount  number;
Billamt  number;
begin
select prod_name,cost into vpname,vcost
from prod_dtls where prod_code=vpid;
--calculating discount
if (vcost<1000) then
discount:=0;
elsif(vcost>=1000 and vcost<10000) then
discount:=0.1*vcost;
elsif(vcost>=10000 and vcost<20000) then
discount:=0.25*vcost;
elsif(vcost>=20000 and vcost<50000) then 
discount:=0.4*vcost;
else
discount:=0.5*vcost;
end if;
Billamt:=vcost-discount;
dbms_output.put_line
(chr(10)||' Selected prod id:     '||vpid||chr(10)||
 ' Prod  Name:    '||vpname||chr(10)||
' M  R   P:   '||vcost||chr(10)||
' Discount Amount:   '||discount||chr(10)||
' Bill   Amount:        '||billamt
);
end proc_BillAmount;




Ex:	
write a procedure to find the higher number of customers 
from the given 2 cities?

Ex:
write a procedure to find the total balance amount in the 
given account type?

Ex:
Write a procedure to display the number of products from the 
given 2 company names and find out from which company we have less number of products?

Ex:
Write a procedure to display the number of mobile products 
from the given 2 company names?

Ex:
Write a procedure to display the total number of customers 
opted for given account type?

Ex:
write a procedure to display the higher total funds  from the
given 3 types of accounts?


------------------------------------------------------------------------------------------

